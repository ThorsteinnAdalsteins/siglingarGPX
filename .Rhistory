#test.case: -0.00681261948
beta <- atan2(X,Y)
#test.case 1.684463062558
return(beta*180/pi)
}
options(digits=10)
f.process.file <- function(file.path){
pfile <- htmlTreeParse(file = file.path,
error = function(...) {},
useInternalNodes = T)
# ná í allar hæðarmælingar tíma og hnit með relative path
elevations <- as.numeric(xpathSApply(pfile, path = "//trkpt/ele", xmlValue))
times <- xpathSApply(pfile, path = "//trkpt/time", xmlValue)
coords <- xpathSApply(pfile, path = "//trkpt", xmlAttrs)
# dreg út lat og lon úr hnitunum
lats <- as.numeric(coords["lat",])
lons <- as.numeric(coords["lon",])
geodf <- tibble(lat = lats, lon = lons, ele = elevations, time = times)
geodf <- geodf %>% mutate(lat.p1 = shift.vec(lat, -1),
lon.p1 = shift.vec(lon, -1))
geodf$dist.to.prev <- apply(geodf, 1, FUN = function (row) {
raster::pointDistance(
c(as.numeric(row["lat.p1"]),as.numeric(row["lon.p1"])),
c(as.numeric(row["lat"]), as.numeric(row["lon"])),
lonlat = TRUE)})/2
geodf$bearing <- apply(geodf, 1, FUN = function(row){
haversine.bearing(as.numeric(row['lat']),
as.numeric(row['lon']),
as.numeric(row['lat.p1']),
as.numeric(row['lon.p1']))})
geodf$bearing <- ifelse(geodf$bearing<0,
geodf$bearing+360,
geodf$bearing)
geodf <- geodf %>%
mutate(time = strptime(time, format = "%Y-%m-%dT%H:%M:%OS"),
time.p1 = shift.vec(time, -1),
time.diff.to.prev = as.numeric(difftime(time.p1, time)))
geodf <- geodf %>%
mutate(
speed.m_s = dist.to.prev/time.diff.to.prev,
speed.km_h = ifelse(is.na(speed.m_s), 0, speed.m_s*3.6),
speed.nmi = speed.km_h*0.539957,
lowess_speed.km_h = lowess(speed.km_h, f = 0.01)$y,
lowess_ele = lowess(ele,f = 0.2)$y,
lowess_bearing = lowess(bearing, f = 0.2)$y,
timi.uppsafnadur = cumsum(time.diff.to.prev),
bearing.bins =cut(bearing, 30))
geodf <- geodf %>% dplyr::select(-lat.p1, -lon.p1, -time.p1 )
geodf$file.path = file.path
return(geodf)
}
f.process.file(trip.meta$skjal[1])
trip.meta$skjal[1]
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
lf
target.file.fixed <- lf[basename(lf)==target.file]
file.exists(target.file.fixed)
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
lf
inner_join(
trip.meta,
tibble(file.path= lf,
skjal = basename(lf)))
trip.meta.ext <- inner_join(
trip.meta,
tibble(file.path= lf,
skjal = basename(lf)),
by = 'skjal')
nrow(trip.meta.ext) == nrow(trip.meta)
orphans <- anti_join(
trip.meta,
files.found,
by = 'skjal')
files.found <- tibble(file.path= lf,
skjal = basename(lf))
trip.meta.ext <- inner_join(
trip.meta,
files.found,
by = 'skjal')
orphans <- anti_join(
trip.meta,
files.found,
by = 'skjal')
orphans
orphans <- anti_join(
files.found,
trip.meta,
by = 'skjal')
orphans
f.process.file(trip.meta.ext$file.path[1])
l.files <- trip.meta.ext$file.path
target.folder <- str_c(this.home, '_GognUt', sep ='/')
rns <- str_c(target.folder,'/', str_replace_all(trip.meta.ext$id, '\\.', '_'), '.csv')
rns
this.content <- f.process.file(trip.meta.ext$file.path[1])
this.content
this.content$file.path <- NULL
names(this.content)
names(this.content) <- str_replace_all(names(this.content), '\\.', '_')
# Chunk 1: setup
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
require(tidyverse)
require(tidyr)
require(XML)
#require(OpenStreetMap)
require(lubridate)
require(ggmap)
require(raster)
#require(sp)
require(htmltidy)
require(DT)
#require(leaflet)
this.home <- getwd()
gpx.home <- 'C:/Users/Notandi/Google Drive/Skemmtibátapróf/Siglingar (gpx)'
#list.files(gpx.home)
# Chunk 2
list.files(gpx.home)
#source('tracks.r')
trip.meta <- readxl::read_excel('trip_metadata.xlsx')
## Vinnsla á einu skjali
target.file <- trip.meta$skjal[length(trip.meta$skjal)]
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
files.found <- tibble(file.path= lf,
skjal = basename(lf))
trip.meta.ext <- inner_join(
trip.meta,
files.found,
by = 'skjal')
orphans <- anti_join(
trip.meta,
files.found,
by = 'skjal')
orphans <- anti_join(
files.found,
trip.meta,
by = 'skjal')
# Chunk 3
# hjálparfall til þess að búa til shift-by dálk úr target dálki
shift.vec <- function (vec, shift) {
if(length(vec) <= abs(shift)) {
rep(NA ,length(vec))
}else{
if (shift >= 0) {
c(rep(NA, shift), vec[1:(length(vec)-shift)]) }
else {
c(vec[(abs(shift)+1):length(vec)], rep(NA, abs(shift))) } } }
# Chunk 4
haversine.bearing <- function(lat.a, lon.a, lat.b, lon.b){
if(FALSE){
#testcase
lat.a = 39.099912
lon.a = -94.581213
lat.b = 38.627089
lon.b = -90.200203
}
theta.a <- lat.a*pi/180
theta.b <- lat.b*pi/180
L.a <- lon.a*pi/180
L.b <- lon.b*pi/180
X <- cos(theta.b)*sin(L.b - L.a)
#test.case: 0.05967668696
Y <- cos(theta.a)*sin(theta.b)-sin(theta.a)*cos(theta.b)*cos(L.b-L.a)
#test.case: -0.00681261948
beta <- atan2(X,Y)
#test.case 1.684463062558
return(beta*180/pi)
}
l.files <- trip.meta.ext$file.path
# Chunk 5
#bý til eitt fall til þess að vinna upp heilt skjal
options(digits=10)
# Parse the GPX file
f.process.file <- function(file.path){
pfile <- htmlTreeParse(file = file.path,
error = function(...) {},
useInternalNodes = T)
# ná í allar hæðarmælingar tíma og hnit með relative path
elevations <- as.numeric(xpathSApply(pfile, path = "//trkpt/ele", xmlValue))
times <- xpathSApply(pfile, path = "//trkpt/time", xmlValue)
coords <- xpathSApply(pfile, path = "//trkpt", xmlAttrs)
# dreg út lat og lon úr hnitunum
lats <- as.numeric(coords["lat",])
lons <- as.numeric(coords["lon",])
geodf <- tibble(lat = lats, lon = lons, ele = elevations, time = times)
geodf <- geodf %>% mutate(lat.p1 = shift.vec(lat, -1),
lon.p1 = shift.vec(lon, -1))
geodf$dist.to.prev <- apply(geodf, 1, FUN = function (row) {
raster::pointDistance(
c(as.numeric(row["lat.p1"]),as.numeric(row["lon.p1"])),
c(as.numeric(row["lat"]), as.numeric(row["lon"])),
lonlat = TRUE)})/2
geodf$bearing <- apply(geodf, 1, FUN = function(row){
haversine.bearing(as.numeric(row['lat']),
as.numeric(row['lon']),
as.numeric(row['lat.p1']),
as.numeric(row['lon.p1']))})
geodf$bearing <- ifelse(geodf$bearing<0,
geodf$bearing+360,
geodf$bearing)
geodf <- geodf %>%
mutate(time = strptime(time, format = "%Y-%m-%dT%H:%M:%OS"),
time.p1 = shift.vec(time, -1),
time.diff.to.prev = as.numeric(difftime(time.p1, time)))
geodf <- geodf %>%
mutate(
speed.m_s = dist.to.prev/time.diff.to.prev,
speed.km_h = ifelse(is.na(speed.m_s), 0, speed.m_s*3.6),
speed.nmi = speed.km_h*0.539957,
lowess_speed.km_h = lowess(speed.km_h, f = 0.01)$y,
lowess_ele = lowess(ele,f = 0.2)$y,
lowess_bearing = lowess(bearing, f = 0.2)$y,
timi.uppsafnadur = cumsum(time.diff.to.prev),
bearing.bins =cut(bearing, 30))
geodf <- geodf %>% dplyr::select(-lat.p1, -lon.p1, -time.p1 )
geodf$file.path = file.path
return(geodf)
}
#xml_tree_view(pfile)
# Chunk 6
target.folder <- str_c(this.home, '_GognUt', sep ='/')
rns <- str_c(target.folder,'/', str_replace_all(trip.meta.ext$id, '\\.', '_'), '.csv')
i <- 1
for(i in seq(length(trip.meta.ext$file.path))){
this.content <- f.process.file(trip.meta.ext$file.path[i])
this.content$file.path <- NULL
names(this.content) <- str_replace_all(names(this.content), '\\.', '_')
write.csv2(this.content, rns[i], row.names = FALSE)
}
trip.meta
# Chunk 1: setup
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
require(tidyverse)
require(tidyr)
require(XML)
#require(OpenStreetMap)
require(lubridate)
require(ggmap)
require(raster)
#require(sp)
require(htmltidy)
require(DT)
#require(leaflet)
this.home <- getwd()
gpx.home <- 'C:/Users/Notandi/Google Drive/Skemmtibátapróf/Siglingar (gpx)'
#list.files(gpx.home)
# Chunk 2
list.files(gpx.home)
#source('tracks.r')
trip.meta <- readxl::read_excel('trip_metadata.xlsx')
## Vinnsla á einu skjali
target.file <- trip.meta$skjal[length(trip.meta$skjal)]
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
files.found <- tibble(file.path= lf,
skjal = basename(lf))
trip.meta.ext <- inner_join(
trip.meta,
files.found,
by = 'skjal')
orphans <- anti_join(
trip.meta,
files.found,
by = 'skjal')
orphans <- anti_join(
files.found,
trip.meta,
by = 'skjal')
# Chunk 3
# hjálparfall til þess að búa til shift-by dálk úr target dálki
shift.vec <- function (vec, shift) {
if(length(vec) <= abs(shift)) {
rep(NA ,length(vec))
}else{
if (shift >= 0) {
c(rep(NA, shift), vec[1:(length(vec)-shift)]) }
else {
c(vec[(abs(shift)+1):length(vec)], rep(NA, abs(shift))) } } }
# Chunk 4
haversine.bearing <- function(lat.a, lon.a, lat.b, lon.b){
if(FALSE){
#testcase
lat.a = 39.099912
lon.a = -94.581213
lat.b = 38.627089
lon.b = -90.200203
}
theta.a <- lat.a*pi/180
theta.b <- lat.b*pi/180
L.a <- lon.a*pi/180
L.b <- lon.b*pi/180
X <- cos(theta.b)*sin(L.b - L.a)
#test.case: 0.05967668696
Y <- cos(theta.a)*sin(theta.b)-sin(theta.a)*cos(theta.b)*cos(L.b-L.a)
#test.case: -0.00681261948
beta <- atan2(X,Y)
#test.case 1.684463062558
return(beta*180/pi)
}
l.files <- trip.meta.ext$file.path
# Chunk 5
#bý til eitt fall til þess að vinna upp heilt skjal
options(digits=10)
# Parse the GPX file
f.process.file <- function(file.path){
pfile <- htmlTreeParse(file = file.path,
error = function(...) {},
useInternalNodes = T)
# ná í allar hæðarmælingar tíma og hnit með relative path
elevations <- as.numeric(xpathSApply(pfile, path = "//trkpt/ele", xmlValue))
times <- xpathSApply(pfile, path = "//trkpt/time", xmlValue)
coords <- xpathSApply(pfile, path = "//trkpt", xmlAttrs)
# dreg út lat og lon úr hnitunum
lats <- as.numeric(coords["lat",])
lons <- as.numeric(coords["lon",])
geodf <- tibble(lat = lats, lon = lons, ele = elevations, time = times)
geodf <- geodf %>% mutate(lat.p1 = shift.vec(lat, -1),
lon.p1 = shift.vec(lon, -1))
geodf$dist.to.prev <- apply(geodf, 1, FUN = function (row) {
raster::pointDistance(
c(as.numeric(row["lat.p1"]),as.numeric(row["lon.p1"])),
c(as.numeric(row["lat"]), as.numeric(row["lon"])),
lonlat = TRUE)})/2
geodf$bearing <- apply(geodf, 1, FUN = function(row){
haversine.bearing(as.numeric(row['lat']),
as.numeric(row['lon']),
as.numeric(row['lat.p1']),
as.numeric(row['lon.p1']))})
geodf$bearing <- ifelse(geodf$bearing<0,
geodf$bearing+360,
geodf$bearing)
geodf <- geodf %>%
mutate(time = strptime(time, format = "%Y-%m-%dT%H:%M:%OS"),
time.p1 = shift.vec(time, -1),
time.diff.to.prev = as.numeric(difftime(time.p1, time)))
geodf <- geodf %>%
mutate(
speed.m_s = dist.to.prev/time.diff.to.prev,
speed.km_h = ifelse(is.na(speed.m_s), 0, speed.m_s*3.6),
speed.nmi = speed.km_h*0.539957,
lowess_speed.km_h = lowess(speed.km_h, f = 0.01)$y,
lowess_ele = lowess(ele,f = 0.2)$y,
lowess_bearing = lowess(bearing, f = 0.2)$y,
timi.uppsafnadur = cumsum(time.diff.to.prev),
bearing.bins =cut(bearing, 30))
geodf <- geodf %>% dplyr::select(-lat.p1, -lon.p1, -time.p1 )
geodf$file.path = file.path
return(geodf)
}
#xml_tree_view(pfile)
# Chunk 6
target.folder <- str_c(this.home, '_GognUt', sep ='/')
rns <- str_c(target.folder,'/', str_replace_all(trip.meta.ext$id, '\\.', '_'), '.csv')
i <- 1
for(i in seq(length(trip.meta.ext$file.path))){
this.content <- f.process.file(trip.meta.ext$file.path[i])
this.content$file.path <- NULL
names(this.content) <- str_replace_all(names(this.content), '\\.', '_')
write.csv2(this.content, rns[i], row.names = FALSE)
}
big.l <- lapply(trip.meta.ext$file.path, f.process.file)
big.l <- do.call(rbind, big.l)
big.l
trip.meta
inner_join(big.l, trip.meta.ext, by = 'file.path') %>%
dplyr::select(-file.path)
big.l <- inner_join(big.l, trip.meta.ext, by = 'file.path') %>%
dplyr::select(-file.path)
names(big.l) <- str_replace_all(names(big.l), '\\.', '_')
write.csv(big.l, str_c(target.folder, 'allar_ferdir.csv', sep = '/'), row.names = FALSE)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
require(tidyverse)
require(tidyr)
require(XML)
#require(OpenStreetMap)
require(lubridate)
require(ggmap)
require(raster)
require(htmltidy)
require(DT)
this.home <- getwd()
gpx.home <- 'C:/Users/Notandi/Google Drive/Skemmtibátapróf/Siglingar (gpx)'
list.files(gpx.home)
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
files.found <- tibble(file.path= lf,
skjal = basename(lf))
trip.meta.ext <- inner_join(
trip.meta,
files.found,
by = 'skjal')
trip.meta <- readxl::read_excel('trip_metadata.xlsx')
## Vinnsla á einu skjali
target.file <- trip.meta$skjal[length(trip.meta$skjal)]
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
files.found <- tibble(file.path= lf,
skjal = basename(lf))
trip.meta.ext <- inner_join(
trip.meta,
files.found,
by = 'skjal')
trip.meta.ext
trip.meta.ext$id[length(trip.meta.ext$id)]
selected_file <- length(trip.meta.ext$id)
trip.meta.ext$id[selected_file]
## Vinnsla á einu skjali
target.file <- trip.meta.ext$file.path[selected_file]
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
target.file.fixed <- lf[basename(lf)==target.file]
file.exists(target.file.fixed)
lf
target.file
trip.meta.ext$id
length(trip.meta.ext$id)
selected_file
trip.meta.ext$id[selected_file]
## Vinnsla á einu skjali
target.file <- trip.meta.ext$file.path[selected_file]
target.file
pfile <- htmlTreeParse(file = target.file,
error = function(...) {
}, useInternalNodes = T)
pfile
# ná í allar hæðarmælingar tíma og hnit með relative path
elevations <- as.numeric(xpathSApply(pfile, path = "//trkpt/ele", xmlValue))
times <- xpathSApply(pfile, path = "//trkpt/time", xmlValue)
coords <- xpathSApply(pfile, path = "//trkpt", xmlAttrs)
# dreg út lat og lon úr hnitunum
lats <- as.numeric(coords["lat",])
lons <- as.numeric(coords["lon",])
selected_file
length(trip.meta.ext$id)
trip.meta.ext$id
nrow(trip.meta.ext)
nrow(trip.meta.ext)
# Chunk 1: setup
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
require(tidyverse)
require(tidyr)
require(XML)
#require(OpenStreetMap)
require(lubridate)
require(ggmap)
require(raster)
#require(sp)
require(htmltidy)
require(DT)
#require(leaflet)
this.home <- getwd()
gpx.home <- 'C:/Users/Notandi/Google Drive/Skemmtibátapróf/Siglingar (gpx)'
#list.files(gpx.home)
list.files(gpx.home)
trip.meta <- readxl::read_excel('trip_metadata.xlsx')
trip.meta
list.files(gpx.home)
trip.meta <- readxl::read_excel('trip_metadata.xlsx')
trip.meta <- readxl::read_excel('trip_metadata.xlsx')
## Vinnsla á einu skjali
target.file <- trip.meta$skjal[length(trip.meta$skjal)]
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
files.found <- tibble(file.path= lf,
skjal = basename(lf))
trip.meta.ext <- inner_join(
trip.meta,
files.found,
by = 'skjal')
trip.meta.ext$id
selected_file <- nrow(trip.meta.ext)
selected_file
trip.meta.ext
files.found
# Chunk 1: setup
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE)
require(tidyverse)
require(tidyr)
require(XML)
#require(OpenStreetMap)
require(lubridate)
require(ggmap)
require(raster)
#require(sp)
require(htmltidy)
require(DT)
#require(leaflet)
this.home <- getwd()
gpx.home <- 'C:/Users/Notandi/Google Drive/Skemmtibátapróf/Siglingar (gpx)'
#list.files(gpx.home)
list.files(gpx.home)
trip.meta <- readxl::read_excel('trip_metadata.xlsx')
## Vinnsla á einu skjali
target.file <- trip.meta$skjal[length(trip.meta$skjal)]
# lenti í vandræðum með að fá rétt nafn á skjalið vegna íslensku stafana í xml pakkanum
lf <- list.files(path = gpx.home, full.names = TRUE)
files.found <- tibble(file.path= lf,
skjal = basename(lf))
trip.meta.ext <- inner_join(
trip.meta,
files.found,
by = 'skjal')
trip.meta.ext$id
selected_file <- nrow(trip.meta.ext)
trip.meta.ext$id[selected_file]
